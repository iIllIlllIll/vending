export default class Seed {
    static GetB0(A: number): number;
    static GetB1(A: number): number;
    static GetB2(A: number): number;
    static GetB3(A: number): number;
    EndianChange(a: number[]): void;
    _EndianChange(a: number): number;
    static SeedRound(a: number[], b: number[], c: number[], d: number[], K: number[]): void;
    static SeedEncrypt(a: number[], b: number[], c: number[]): void;
    static SeedDecrypt(a: number[], b: number[], c: number[]): void;
    static EncRoundKeyUpdate0(K: number[], A: number[], B: number[], C: number[], D: number[], Z: number): void;
    static EncRoundKeyUpdate1(K: number[], A: number[], B: number[], C: number[], D: number[], Z: number): void;
    static SeedRoundKey(a: number[], b: number[]): void;
    static SeedXor(a: number[], b: number[], c: number[]): void;
    static SeedSetKey(a: number[], b: number[]): void;
    static ArrayCopy(a: number[], b: number, c: number[], d: number, e: number): void;
    static SeedEncryptEcb(a: number[], b: number[], c: number[]): void;
    static SeedDecryptEcb(a: number[], b: number[], c: number[]): void;
    static SeedEncryptCbc(a: number[], b: number[], c: number[], d: number, e: number[]): void;
    SeedDecryptCbc(a: number[], b: number[], c: number[], d: number, e: number[]): void;
    static SeedEnc(geo: string, sessionKey: number[]): string;
}
