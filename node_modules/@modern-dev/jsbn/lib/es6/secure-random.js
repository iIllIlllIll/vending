/*!
 * JavaScript BigInteger
 * https://github.com/modern-dev/jsbn
 *
 * Copyright (c) 2019 Bohdan Shtepan
 * Licensed under a BSD license.
 *
 * Original copyright
 * Copyright (c) 2003-2005 Tom Wu
 * All Rights Reserved.
 */
let rng_state = null;
let rng_pool;
let rng_pptr = 0;
const rng_psize = 256;
if (typeof rng_pool === 'undefined') {
    rng_pool = [];
    let t;
    if (typeof window !== 'undefined' && window.crypto) {
        if (window.crypto.getRandomValues) {
            let ua = new Uint8Array(32);
            window.crypto.getRandomValues(ua);
            for (t = 0; t < 32; ++t) {
                rng_pool[rng_pptr++] = ua[t];
            }
        }
        else if (navigator.appName === 'Netscape' && navigator.appVersion < '5') {
            const z = window.crypto.random(32);
            for (t = 0; t < z.length; ++t)
                rng_pool[rng_pptr++] = z.charCodeAt(t) & 255;
        }
    }
    while (rng_pptr < rng_psize) {
        t = Math.floor(65536 * Math.random());
        rng_pool[rng_pptr++] = t >>> 8;
        rng_pool[rng_pptr++] = t & 255;
    }
    rng_pptr = 0;
    rng_seed_time();
}
function rng_seed_int(x) {
    rng_pool[rng_pptr++] ^= x & 255;
    rng_pool[rng_pptr++] ^= (x >> 8) & 255;
    rng_pool[rng_pptr++] ^= (x >> 16) & 255;
    rng_pool[rng_pptr++] ^= (x >> 24) & 255;
    if (rng_pptr >= rng_psize) {
        rng_pptr -= rng_psize;
    }
}
function rng_get_byte() {
    if (rng_state === null) {
        rng_seed_time();
        rng_state = prng_newstate();
        rng_state.init(rng_pool);
        for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {
            rng_pool[rng_pptr] = 0;
        }
        rng_pptr = 0;
    }
    return rng_state.next();
}
function rng_get_bytes(ba) {
    let i;
    for (i = 0; i < ba.length; ++i) {
        ba[i] = rng_get_byte();
    }
}
function prng_newstate() {
    return new Arcfour();
}
export function rng_seed_time() {
    rng_seed_int(new Date().getTime());
}
export default class SecureRandom {
    constructor() {
        this.nextBytes = rng_get_bytes;
    }
}
export class Arcfour {
    constructor() {
        this.i = 0;
        this.j = 0;
        this.S = [];
    }
    init(key) {
        let i, j, t;
        for (i = 0; i < 256; ++i) {
            this.S[i] = i;
        }
        j = 0;
        for (i = 0; i < 256; ++i) {
            j = (j + this.S[i] + key[i % key.length]) & 255;
            t = this.S[i];
            this.S[i] = this.S[j];
            this.S[j] = t;
        }
        this.i = 0;
        this.j = 0;
    }
    next() {
        let t;
        this.i = (this.i + 1) & 255;
        this.j = (this.j + this.S[this.i]) & 255;
        t = this.S[this.i];
        this.S[this.i] = this.S[this.j];
        this.S[this.j] = t;
        return this.S[(t + this.S[this.i]) & 255];
    }
}
//# sourceMappingURL=secure-random.js.map