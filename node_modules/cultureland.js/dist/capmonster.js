import axios from "axios";
export default class CapMonster {
    apiKey;
    constructor(apiKey) {
        this.apiKey = apiKey;
    }
    async createTask(type, websiteURL, websiteKey, isInvisible) {
        const task = await axios.post("https://api.capmonster.cloud/createTask", {
            clientKey: this.apiKey,
            task: {
                type,
                websiteURL,
                websiteKey,
                isInvisible
            }
        }).then(res => res.data);
        if (task.errorId > 0) {
            throw new Error(task.errorDescription);
        }
        return task.taskId;
    }
    async getTaskResult(taskId) {
        const taskResult = await axios.post("https://api.capmonster.cloud/getTaskResult", {
            clientKey: this.apiKey,
            taskId
        }).then(res => res.data);
        if (taskResult.errorId > 0) {
            throw new Error(taskResult.errorDescription ?? taskResult.errorCode ?? taskResult.errorId.toString());
        }
        return {
            success: taskResult.status === "ready",
            solution: taskResult.solution?.gRecaptchaResponse
        };
    }
    async awaitTaskResult(taskId) {
        for (let i = 0; i < 20; i++) {
            const taskResult = await this.getTaskResult(taskId);
            if (taskResult.success) {
                return {
                    success: true,
                    solution: taskResult.solution
                };
            }
            await new Promise(resolve => setTimeout(resolve, 3000));
        }
        return {
            success: false
        };
    }
}
